
--QUERY 1

--What Category&Rating of the films has the longest total rental duration?

WITH FilmCategoryRatingTotal AS (
    SELECT
        CONCAT(c.name, ' - ', f.rating) AS category_rating,
        SUM(f.rental_duration) AS total_rental_duration
    FROM
        film f
    JOIN
        film_category fc ON f.film_id = fc.film_id
    JOIN
        category c ON fc.category_id = c.category_id
    GROUP BY
        category_rating
)
SELECT
    category_rating,
    total_rental_duration
FROM
    FilmCategoryRatingTotal
ORDER BY
    total_rental_duration DESC
LIMIT 20;


--QUERY 2

--What are the monthly total revenue generated by the various film categories?

WITH CategoryRevenue AS (
    SELECT
        DATE_PART('MONTH', p.payment_date) AS payment_month,
        c.name AS category_name,
        SUM(p.amount) AS total_revenue
    FROM
        payment p
    JOIN
        rental r ON p.rental_id = r.rental_id
    JOIN
        inventory i ON r.inventory_id = i.inventory_id
    JOIN
        film f ON i.film_id = f.film_id
    JOIN
        film_category fc ON f.film_id = fc.film_id
    JOIN
        category c ON fc.category_id = c.category_id
    GROUP BY
        payment_month, category_name
)
SELECT
    payment_month,
    category_name,
    total_revenue
FROM
    CategoryRevenue
ORDER BY
    total_revenue DESC, payment_month, category_name;

--QUERY 3

--How does the actors full name and film length affect customer payment?


WITH MoviePayments AS (
    SELECT
        f.title AS movie_title,
        CONCAT(a.first_name, ' ', a.last_name) AS author_name,
        f.length,
        SUM(p.amount) AS total_payments
    FROM
        payment p
    JOIN
        rental r ON p.rental_id = r.rental_id
    JOIN
        inventory i ON r.inventory_id = i.inventory_id
    JOIN
        film f ON i.film_id = f.film_id
    JOIN
        film_actor fa ON f.film_id = fa.film_id
    JOIN
        actor a ON fa.actor_id = a.actor_id
    GROUP BY
        movie_title, author_name, f.length
),
RankedMovies AS (
    SELECT
        movie_title,
        author_name,
        length,
        SUM(total_payments) AS total_payments,
        RANK() OVER (ORDER BY SUM(total_payments) DESC) AS payment_rank
    FROM
        MoviePayments
    GROUP BY
        movie_title, author_name, length
)
SELECT
    movie_title,
    author_name,
    length,
    total_payments
FROM
    RankedMovies
WHERE
    payment_rank <= 20
ORDER BY
    total_payments DESC;

--QUERY 4
--Top 15 total payments made by customers in different locations on a monthly basis

WITH CustomerPayments AS (
    SELECT
        c.customer_id,
        CONCAT(ci.city, ', ', co.country) AS location,
        DATE_PART('MONTH', p.payment_date) AS payment_month,
        SUM(p.amount) AS total_payments
    FROM
        customer c
    JOIN
        payment p ON c.customer_id = p.customer_id
    JOIN
        rental r ON p.rental_id = r.rental_id
    JOIN
        inventory i ON r.inventory_id = i.inventory_id
    JOIN
        address a ON c.address_id = a.address_id
    JOIN
        city ci ON a.city_id = ci.city_id
    JOIN
        country co ON ci.country_id = co.country_id
    GROUP BY
        c.customer_id, location, payment_month
)
, TopLocationsPayments AS (
    SELECT
        location,
        payment_month,
        SUM(total_payments) AS total_payments
    FROM
        CustomerPayments
    GROUP BY
        location, payment_month
)
SELECT
    location,
    payment_month,
    total_payments
FROM
    TopLocationsPayments
ORDER BY
    payment_month, total_payments DESC
LIMIT 15;


